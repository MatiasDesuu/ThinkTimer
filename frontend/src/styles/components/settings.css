/* Settings Components */
.settings-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.setting-card {
    background-color: var(--bg-primary);
    border: 1px solid var(--border-color);
    border-radius: var(--radius);
    padding: 1rem;
    box-shadow: var(--shadow);
    transition: all 0.2s ease;
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: 1rem;
    text-align: left !important;
    min-height: auto;
}

.setting-card:hover {
    box-shadow: var(--shadow-md);
    transform: translateY(-1px);
}

.setting-card * {
    text-align: left !important;
}

.setting-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    text-align: left;
    align-items: flex-start;
}

.setting-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.25rem;
    width: 100%;
}

.setting-title i {
    color: var(--accent-color);
    font-size: 1rem;
    width: 16px;
    text-align: center !important;
    flex-shrink: 0;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.setting-title h3 {
    font-size: 1rem;
    font-weight: 600;
    color: var(--text-primary);
    margin: 0;
}

.setting-description {
    font-size: 0.875rem;
    color: var(--text-secondary);
    margin: 0;
    line-height: 1.4;
}

.setting-control {
    flex-shrink: 0;
    display: flex;
    align-items: center; /* vertically center controls internally */
    align-self: center; /* center the control inside the .setting-card */
    margin-top: 0; /* remove top nudging so the control centers precisely */
}

/* Modern switch control */
.switch {
    --switch-width: 44px;
    --switch-height: 24px;
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    height: var(--switch-height); /* ensure the switch wrapper matches the track height */
}

.switch input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    display: block; /* avoid baseline alignment issues */
    box-sizing: border-box;
    width: var(--switch-width);
    height: var(--switch-height);
    background: var(--bg-secondary);
    border-radius: calc(var(--switch-height) / 2);
    position: relative;
    cursor: pointer;
    outline: none;
    transition: background 0.18s ease, border-color 0.18s ease;
    border: 1px solid var(--border-color);
    padding: 0;
    line-height: 0; /* prevent text metrics from shifting layout */
}

.switch input[type="checkbox"]::after {
    content: '';
    width: calc(var(--switch-height) - 6px);
    height: calc(var(--switch-height) - 6px);
    background: white;
    border-radius: 50%;
    position: absolute;
    left: 3px;
    top: 50%;
    transform: translateY(-50%);
    transition: transform 0.18s ease;
    box-shadow: 0 1px 2px rgba(0,0,0,0.06);
}

.switch input[type="checkbox"]:checked {
    background: var(--accent-color);
    border-color: var(--accent-color);
}

.switch input[type="checkbox"]:checked::after {
    transform: translateY(-50%) translateX(calc(var(--switch-width) - var(--switch-height)));
}

.switch-label {
    font-size: 0.9rem;
    color: var(--text-tertiary);
}

.setting-select {
    min-width: 120px;
    padding: 0.5rem 2rem 0.5rem 0.75rem;
    border: 1px solid var(--border-color);
    border-radius: var(--radius);
    background-color: var(--bg-secondary);
    color: var(--text-primary);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 1rem;
}

/* Chevron for dark theme */
[data-theme="dark"] .setting-select {
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23f8f8f8' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
}

/* Chevron for light theme */
[data-theme="light"] .setting-select {
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23111111' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
}

.setting-select:hover {
    border-color: var(--accent-color);
    background-color: var(--bg-primary);
    box-shadow: var(--shadow);
}

.setting-select:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.2);
    background-color: var(--bg-primary);
}

.setting-select:focus-visible {
    outline: 2px solid var(--accent-color);
    outline-offset: 2px;
}

.setting-select option {
    background-color: var(--bg-primary);
    color: var(--text-primary);
    padding: 0.5rem;
}

.setting-input {
    min-width: 200px;
    padding: 0.5rem 0.75rem;
    border: 1px solid var(--border-color);
    border-radius: var(--radius);
    background-color: var(--bg-secondary);
    color: var(--text-primary);
    font-size: 0.875rem;
    font-weight: 400;
    transition: all 0.2s ease;
    font-family: inherit;
}

.setting-input:hover {
    border-color: var(--accent-color);
    background-color: var(--bg-primary);
    box-shadow: var(--shadow);
}

.setting-input:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.2);
    background-color: var(--bg-primary);
}

.setting-input:focus-visible {
    outline: 2px solid var(--accent-color);
    outline-offset: 2px;
}

.setting-input::placeholder {
    color: var(--text-tertiary);
    opacity: 0.7;
}

.setting-control .form-group {
    margin-bottom: 0;
    min-width: 200px;
}

.setting-control .form-group input {
    margin: 0;
}

/* Responsive design for settings */
@media (max-width: 768px) {
    .setting-card {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.75rem;
    }
    
    .setting-info {
        width: 100%;
    }
    
    .setting-control {
        width: 100%;
    }
    
    .setting-select {
        width: 100%;
        min-width: unset;
    }
    
    .setting-input {
        width: 100%;
        min-width: unset;
    }
    
    .setting-control .form-group {
        width: 100%;
        min-width: unset;
    }
}
